# Generated by Django 4.2.7 on 2025-08-11 20:27

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('projects', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='TariffCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Nombre de la Categoría')),
                ('code', models.CharField(max_length=20, unique=True, verbose_name='Código')),
                ('description', models.TextField(blank=True, verbose_name='Descripción')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de Creación')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Última Actualización')),
            ],
            options={
                'verbose_name': 'Categoría Tarifaria',
                'verbose_name_plural': 'Categorías Tarifarias',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='InvestmentSimulation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('user_email', models.EmailField(max_length=254, verbose_name='Email del Usuario')),
                ('user_phone', models.CharField(max_length=20, verbose_name='Teléfono del Usuario')),
                ('monthly_bill_ars', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Factura Mensual (ARS)')),
                ('simulation_type', models.CharField(choices=[('bill_coverage', 'Cobertura de Factura'), ('panels', 'Número de Paneles'), ('investment', 'Monto de Inversión')], max_length=20, verbose_name='Tipo de Simulación')),
                ('bill_coverage_percentage', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Porcentaje de Cobertura de Factura (%)')),
                ('number_of_panels', models.PositiveIntegerField(blank=True, null=True, verbose_name='Cantidad de Paneles')),
                ('investment_amount_usd', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Monto de Inversión (USD)')),
                ('total_investment_usd', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Inversión Total (USD)')),
                ('total_investment_ars', models.DecimalField(decimal_places=2, max_digits=15, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Inversión Total (ARS)')),
                ('installed_power_kw', models.DecimalField(decimal_places=3, max_digits=8, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Potencia Instalada (kW)')),
                ('annual_generation_kwh', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Generación Anual (kWh)')),
                ('monthly_generation_kwh', models.DecimalField(decimal_places=2, max_digits=8, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Generación Mensual (kWh)')),
                ('monthly_savings_ars', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Ahorro Mensual (ARS)')),
                ('annual_savings_ars', models.DecimalField(decimal_places=2, max_digits=12, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Ahorro Anual (ARS)')),
                ('payback_period_years', models.DecimalField(decimal_places=2, max_digits=5, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Período de Retorno (años)')),
                ('bill_coverage_achieved', models.DecimalField(decimal_places=2, max_digits=5, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Cobertura de Factura Lograda (%)')),
                ('roi_annual', models.DecimalField(decimal_places=2, max_digits=6, verbose_name='ROI Anual (%)')),
                ('exchange_rate_used', models.DecimalField(decimal_places=2, max_digits=8, verbose_name='Tipo de Cambio Utilizado')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de Creación')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='simulations', to='projects.solarproject')),
                ('tariff_category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='simulations.tariffcategory')),
            ],
            options={
                'verbose_name': 'Simulación de Inversión',
                'verbose_name_plural': 'Simulaciones de Inversión',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ExchangeRate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rate', models.DecimalField(decimal_places=2, max_digits=8, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Tipo de Cambio (ARS por USD)')),
                ('source', models.CharField(default='Manual', max_length=100, verbose_name='Fuente')),
                ('date', models.DateField(verbose_name='Fecha')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de Creación')),
            ],
            options={
                'verbose_name': 'Tipo de Cambio',
                'verbose_name_plural': 'Tipos de Cambio',
                'ordering': ['-date'],
                'unique_together': {('date', 'source')},
            },
        ),
    ]
